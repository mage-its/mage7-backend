limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;

server {
    server_name mage-its.com www.mage-its.com;
    client_max_body_size 20M;

    root /home/mage7/mage7-frontend/dist;
    index index.html;

    location /uploads/ {
        valid_referers none blocked mage-its.com *.mage-its.com;
        if ($invalid_referer) {
            return 403;
        }
    }

    location ~* \.(?:ico|css|js|gif|jpe?g|png|svg|woff2)$ {
        expires 1y;
        add_header Vary Accept-Encoding;
        access_log off;
    }

    location / {
        limit_req zone=mylimit burst=20 nodelay;
        add_header X-Frame-Options SAMEORIGIN;

        add_header X-Content-Type-Options nosniff;

        add_header X-XSS-Protection "1; mode=block";

        add_header Referrer-Policy no-referrer;

        add_header Strict-Transport-Security "max-age=15552000; includeSubdomains";

        add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
        try_files $uri /index.html;
    }

    location /api {
        limit_req zone=mylimit burst=10 nodelay;
        rewrite ^/api/(.*)$ /$1 break;
        proxy_pass http://localhost:3000;
    }

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/mage-its.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/mage-its.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}
server {
    if ($host = www.mage-its.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = mage-its.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    listen [::]:80;
    server_name mage-its.com www.mage-its.com;
    return 404; # managed by Certbot




}
